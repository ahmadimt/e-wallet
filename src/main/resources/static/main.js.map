{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.scss","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/transaction.service.ts","webpack:///./src/app/wallet.service.ts","webpack:///./src/app/wallet/wallet.component.html","webpack:///./src/app/wallet/wallet.component.scss","webpack:///./src/app/wallet/wallet.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\n\\n</div>\\n<div>\\n    <ul class=\\\"collapsible\\\">\\n        <li>\\n            <div class=\\\"collapsible-header\\\">View Wallets</div>\\n            <div class=\\\"collapsible-body\\\">\\n                <form class=\\\"col s12\\\" [formGroup]=\\\"walletForm\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"input-field col s6\\\">\\n                            <input id=\\\"icon_prefix_1\\\" type=\\\"text\\\" class=\\\"validate\\\" formControlName=\\\"walletId\\\" required>\\n                            <label for=\\\"icon_prefix_1\\\">Please enter a valid wallet id</label>\\n                            <div *ngIf=\\\"walletForm.controls['walletId'].hasError('required')\\\" class=\\\"error-msg\\\">\\n                                Wallet id is required.\\n                            </div>\\n                            <div *ngIf=\\\"walletForm.controls['walletId'].hasError('pattern')\\\" class=\\\"error-msg\\\">\\n                                Wallet id is invalid.\\n                            </div>\\n                        </div>\\n                        <div class=\\\"input-field col s6\\\">\\n                            <div class=\\\"input-field col s4\\\">\\n                                <button type=\\\"submit\\\" (click)=\\\"show()\\\" [disabled]=\\\"walletForm.invalid\\\" class=\\\"btn btn-success save-button\\\">Get Wallet</button>\\n                            </div>\\n                            <div class=\\\"input-field col s4\\\">\\n                                <button type=\\\"submit\\\" (click)=\\\"showResults()\\\" [disabled]=\\\"walletForm.invalid\\\" class=\\\"btn btn-success save-button\\\">Show All</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </li>\\n        <li>\\n            <div class=\\\"collapsible-header\\\">Create Wallets</div>\\n            <div class=\\\"collapsible-body\\\">\\n                <form class=\\\"col s12 custom-form\\\" [formGroup]=\\\"walletAdminForm\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"input-field col s6\\\">\\n                            <input id=\\\"icon_prefix\\\" type=\\\"text\\\" class=\\\"validate\\\" formControlName=\\\"name\\\" required>\\n                            <label for=\\\"icon_prefix\\\">Name of the wallet</label>\\n                            <div *ngIf=\\\"walletAdminForm.controls['name'].hasError('required')\\\" class=\\\"error-msg\\\">\\n                                Name is required.\\n                            </div>\\n                            <div *ngIf=\\\"walletAdminForm.controls['name'].hasError('pattern')\\\" class=\\\"error-msg\\\">\\n                                Name is invalid.\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"input-field col s6\\\">\\n                            <select [ngModel]=\\\"selectedValue\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"select.value = onTypeChanged($event)\\\" >\\n                                <option value=\\\"\\\" disabled selected>Choose a type of Wallet</option>\\n                                <option value=\\\"Regular\\\">Regular</option>\\n                                <option value=\\\"Overdraft\\\">Overdraft</option>\\n                            </select>\\n                            <label>Type of Wallet</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field col 12\\\">\\n                        <div class=\\\"input-field col 6 custom-float\\\">\\n                            <button type=\\\"submit\\\" (click)=\\\"create($event)\\\" class=\\\"btn btn-success save-button\\\">Create Wallet</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </li>\\n    </ul>\\n</div>\"","module.exports = \".custom-form {\\n  margin-bottom: 50px; }\\n\\n.custom-float {\\n  float: right;\\n  margin-top: -15px; }\\n\\n.error-msg {\\n  color: red;\\n  float: right; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport * as M from 'materialize-css';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n  typeSelector: any;\n  select: any;\n  selectedValue: any;\n  walletForm: FormGroup;\n  walletAdminForm: FormGroup;\n  urlRegx = '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?';\n  pagination: any;\n  constructor() {\n    document.addEventListener('DOMContentLoaded', () => {\n      this.select = document.querySelector('select');\n      this.typeSelector = M.FormSelect.init(this.select, {});\n    });\n  }\n\n  ngOnInit() {\n    this.walletForm = new FormGroup({\n      walletId: new FormControl('', Validators.compose([Validators.pattern(this.urlRegx), Validators.required]))\n    });\n    this.walletAdminForm = new FormGroup({\n      name: new FormControl('', Validators.compose([Validators.required]))\n    });\n\n    document.addEventListener('DOMContentLoaded', () => {\n      const elems = document.querySelectorAll('.collapsible');\n      M.Collapsible.init(elems, {});\n    });\n  }\n  create() {\n    console.log('Selected Value ', this.selectedValue);\n  }\n\n  onTypeChanged(event) {\n    this.selectedValue = event;\n    return this.selectedValue;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { WalletComponent } from './wallet/wallet.component';\n\nconst routes: Routes = [\n  { path: '', component: WalletComponent },\n  { path: ':id', component: HomeComponent },\n  { path: 'admin', component: AdminComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-header></app-header>\\n  <router-outlet></router-outlet>\\n  <app-footer></app-footer>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AdminComponent } from './admin/admin.component';\nimport { WalletComponent } from './wallet/wallet.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    AdminComponent,\n    WalletComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule, ReactiveFormsModule, HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<footer class=\\\"page-footer teal lighten-2\\\">\\n  <div class=\\\"footer-copyright\\\">\\n      <div class=\\\"container\\\">\\n          © 2018 Copyright Text\\n          <a class=\\\"grey-text text-lighten-4 right\\\" href=\\\"https://github.com/ahmadimt\\\" target=\\\"blank\\\">Git</a>\\n      </div>\\n  </div>\\n</footer>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav>\\n  <div class=\\\"nav-wrapper teal lighten-2\\\">\\n    <a href=\\\"#\\\" class=\\\"brand-logo\\\">E-Wallet</a>\\n  </div>\\n</nav>\"","module.exports = \"nav .brand-logo {\\n  position: absolute;\\n  color: #fff;\\n  display: inline-block;\\n  font-size: 2.1rem;\\n  padding: 0;\\n  padding-top: 0px;\\n  padding-right: 0px;\\n  padding-bottom: 0px;\\n  padding-left: 10px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h5>Details</h5>\\n<div class=\\\"row custom-border\\\">\\n    <div *ngIf=\\\"walletDetails\\\">\\n        <table class=\\\"centered responsive-table\\\">\\n            <thead>\\n                <tr>\\n                    <th>Name</th>\\n                    <th>Type</th>\\n                    <th>Current Balance</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr>\\n                    <td>{{walletDetails.name}}</td>\\n                    <td>{{walletDetails.type}}</td>\\n                    <td>{{walletDetails.balance}}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n<h5>Transaction</h5>\\n<div class=\\\"row\\\">\\n    <!-- <div>\\n        <ul class=\\\"tabs\\\">\\n            <li class=\\\"tab col s6\\\"><a href=\\\"#transaction\\\" class=\\\"active\\\" (click)=\\\"hidePassbook()\\\">Transaction</a></li>\\n            <li class=\\\"tab col s6\\\"><a href=\\\"#passbook\\\" (click)=\\\"getPassbook()\\\">Passbook</a></li>\\n        </ul>\\n    </div> -->\\n    <div id=\\\"transaction\\\" class=\\\"col s12 top-padding-10px custom-border\\\">\\n\\n        <div class=\\\"row\\\">\\n            <span>Start a new Transaction</span>\\n            <form [formGroup]=\\\"transactionForm\\\">\\n                <div>\\n                    <div class=\\\"input-field col s6\\\">\\n                        <!-- <label for=\\\"icon_prefix\\\">Please enter a valid amount</label> -->\\n                        <input id=\\\"icon_prefix\\\" type=\\\"number\\\" placeholder=\\\"e.g. 32.23\\\" class=\\\"validate\\\" formControlName=\\\"amount\\\" required step=\\\"0.01\\\">\\n                        <div *ngIf=\\\"transactionForm.controls['amount'].hasError('required')\\\" class=\\\"error-msg\\\">\\n                            Amount is required.\\n                        </div>\\n                        <div *ngIf=\\\"transactionForm.controls['amount'].hasError('pattern')\\\" class=\\\"error-msg\\\">\\n                            Only two decimal places are allowed\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field col s6\\\">\\n                        <select [ngModel]=\\\"selectedValue\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"select.value = onTypeChanged($event)\\\">\\n                        <option value=\\\"\\\" disabled selected>Choose a type of transaction</option>\\n                        <option value=\\\"CREDIT\\\">CREDIT</option>\\n                        <option value=\\\"DEBIT\\\">DEBIT</option>\\n                    </select>\\n                        <label>Type of transaction</label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col s12 no-padding \\\">\\n                    <div class=\\\"col s6 right\\\">\\n                        <button type=\\\"submit\\\" (click)=\\\"doTransaction()\\\" [disabled]=\\\"transactionForm.invalid || !selectedValue\\\" class=\\\"btn save-button right\\\">Submit</button>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <span>Cancel Transaction</span>\\n            <form [formGroup]=\\\"cancellationForm\\\">\\n                <div>\\n                    <div class=\\\"input-field col s6\\\">\\n                        <!-- <label for=\\\"icon_prefix\\\">Please enter a valid amount</label> -->\\n                        <input id=\\\"icon_prefix\\\" type=\\\"text\\\" placeholder=\\\"171f5951-3b53-47f6-a482-7a18dc23acdb\\\" class=\\\"validate\\\" formControlName=\\\"transactionId\\\" required>\\n                        <div *ngIf=\\\"cancellationForm.controls['transactionId'].hasError('required')\\\" class=\\\"error-msg\\\">\\n                            Transaction Id is required.\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n            <div class=\\\"col s12\\\">\\n                <div class=\\\"col s6\\\">\\n                    <button type=\\\"submit\\\" (click)=\\\"cancelTransaction()\\\" [disabled]=\\\"cancellationForm.invalid\\\" class=\\\"btn save-button right\\\">Cancel</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n<div class=\\\"row\\\">\\n    <h5>Passbook</h5>\\n    <div id=\\\"Passbook\\\" class=\\\"col s12 custom-border\\\">\\n        <table class=\\\"centered responsive-table\\\" *ngIf=\\\"transactionDetails\\\">\\n            <thead>\\n                <tr>\\n                    <th>Transaction Id</th>\\n                    <th>Amount</th>\\n                    <th>Type</th>\\n                    <th>Status</th>\\n                    <th>Timestamp</th>\\n                </tr>\\n            </thead>\\n            <tr *ngFor=\\\"let detail of transactionDetails.transactions\\\">\\n                <td>{{detail.transactionId}}</td>\\n                <td>{{detail.amount}}</td>\\n                <td>{{detail.type}}</td>\\n                <td>{{detail.status}}</td>\\n                <td>{{detail.timestamp}}</td>\\n            </tr>\\n        </table>\\n    </div>\\n</div>\"","module.exports = \".tabs .tab a.active {\\n  background-color: #ee6e724d;\\n  color: #ee6e73; }\\n\\n.custom-border {\\n  margin-top: 10px;\\n  border: 1px solid lightgray; }\\n\\n.no-padding {\\n  padding: 0 !important; }\\n\\n.no-padding-left {\\n  padding-left: 0 !important; }\\n\\n.top-padding-10px {\\n  padding-top: 15px !important;\\n  padding-bottom: 15px !important; }\\n\\n.error-msg {\\n  color: red;\\n  float: right; }\\n\\n.custom-margin {\\n  margin-top: 10px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport * as M from 'materialize-css';\nimport { TransactionTypeService } from '../transaction.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { WalletService } from '../wallet.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  showForm = false;\n  showPassbook = false;\n  isTransaction = true;\n  select: any;\n  typeSelector: any;\n  transactionTypes: any[];\n  error: any;\n  transactionForm: FormGroup;\n  data: any;\n  walletId: any;\n  selectedValue: any;\n  numberRegx = /^\\d+(?:\\.\\d{1,2})?$/;\n  transactionDetails: any[];\n  walletDetails: any;\n  cancellationForm: FormGroup;\n  cancellationDetails: any;\n  constructor(private transactionService: TransactionTypeService, private route: ActivatedRoute,\n    private walletService: WalletService) {\n    route.url.subscribe(data => this.walletId = data[0].path);\n  }\n\n  ngOnInit() {\n    document.addEventListener('DOMContentLoaded', () => {\n      const elems = document.querySelectorAll('.tabs');\n      M.Tabs.init(elems, {});\n      this.select = document.querySelector('select');\n      this.typeSelector = M.FormSelect.init(this.select, {});\n    });\n    /* this.transactionForm = new FormGroup({\n      amount: new FormControl('', Validators.compose([Validators.required]))\n    }); */\n    this.transactionForm = new FormGroup({\n      amount: new FormControl('', Validators.compose([Validators.pattern(this.numberRegx), Validators.required]))\n    });\n\n    this.cancellationForm = new FormGroup({\n      transactionId: new FormControl('', Validators.compose([Validators.required]))\n    });\n    this.getWalletDetails();\n    this.getPassbook();\n  }\n\n  onTypeChanged(event) {\n    this.selectedValue = event;\n    return this.selectedValue;\n  }\n\n  doTransaction() {\n    console.log('Type of transaction', this.selectedValue);\n    const amount = this.transactionForm.get('amount').value;\n    console.log('Amount', amount);\n\n    this.transactionService.doTransaction(this.walletId, amount, this.selectedValue)\n      .subscribe(res => this.data = res, err => this.error = err, () => {\n        console.log(this.data);\n        this.getWalletDetails();\n        this.getPassbook();\n        alert('Transaction of type ' + this.selectedValue + ' for an amount ' + amount + ' is successful')\n      });\n  }\n  getPassbook() {\n    this.walletService.getPassbookDetails(this.walletId).subscribe(\n      res => this.transactionDetails = res,\n      err => this.error = err, () => {\n        console.log(this.transactionDetails);\n      });\n  }\n\n  getWalletDetails() {\n    this.walletService.getWalletDetails(this.walletId).subscribe(\n      res => this.walletDetails = res,\n      err => this.error = err, () => {\n        console.log(this.walletDetails);\n      });\n  }\n\n  hidePassbook() {\n    this.showPassbook = false;\n    this.isTransaction = !this.isTransaction;\n\n  }\n  cancelTransaction() {\n    const transactionId = this.cancellationForm.get('transactionId').value;\n    this.transactionService.cancelTransaction(this.walletId, transactionId).subscribe(\n      res => this.cancellationDetails = res,\n      err => this.error = err, () => {\n        alert('Transaction cancelled successfully');\n        this.getPassbook();\n        this.getWalletDetails();\n        console.log('Cancellation details', this.cancellationDetails);\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionTypeService {\n\n  baseUrl: string = environment.apiBaseUrl;\n  transactionType: any;\n  error: any;\n  constructor(private httpClient: HttpClient) { }\n\n  getTransactionType(): Observable<any> {\n    return this.httpClient.get(this.baseUrl.concat('transaction/type'));\n  }\n  doTransaction(walletId: any, amount: any, type: any): Observable<any> {\n    return this.httpClient.post(this.baseUrl.concat('wallet/').concat(walletId).concat('/transaction'), { 'amount': amount, 'type': type });\n  }\n\n  cancelTransaction(walletId: any, transactionId: any): Observable<any> {\n    return this.httpClient.delete(this.baseUrl.concat('wallet/').concat(walletId).concat('/transaction/').concat(transactionId));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WalletService {\n\n  baseUrl: string = environment.apiBaseUrl;\n  constructor(private httpClient: HttpClient) { }\n\n  getPassbookDetails(walletId: any): Observable<any> {\n    return this.httpClient.get(this.baseUrl.concat('wallet/').concat(walletId).concat('/transaction'));\n  }\n  getWalletDetails(walletId: any): Observable<any> {\n    return this.httpClient.get(this.baseUrl.concat('wallet/').concat(walletId));\n  }\n\n  getAllWallets(): Observable<any> {\n    return this.httpClient.get(this.baseUrl.concat('admin/wallet/'));\n  }\n}\n","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"wallets\\\">\\n    <table class=\\\"centered responsive-table no-padding\\\">\\n        <thead>\\n            <tr>\\n                <th>Id</th>\\n                <th>Type</th>\\n                <th>Balance</th>\\n            </tr>\\n        </thead>\\n        <tr *ngFor=\\\"let wallet of wallets.wallets\\\">\\n            <td><a [routerLink]=\\\"wallet.id\\\">{{wallet.id}}</a></td>\\n            <td>{{wallet.type}}</td>\\n            <td>{{wallet.balance}}</td>\\n        </tr>\\n    </table>\\n\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { WalletService } from '../wallet.service';\n\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.component.html',\n  styleUrls: ['./wallet.component.scss']\n})\nexport class WalletComponent implements OnInit {\n  wallets: any[];\n  error: any;\n\n  constructor(private walletService: WalletService) { }\n\n  ngOnInit() {\n    this.getWalletList();\n  }\n  getWalletList() {\n    this.walletService.getAllWallets().subscribe(res => this.wallets = res, err => this.error = err, () => {\n      console.log(this.wallets);\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'http://localhost:8080/api/v1/',\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}